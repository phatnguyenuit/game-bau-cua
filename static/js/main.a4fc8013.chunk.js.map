{"version":3,"sources":["components/dice-plate/styles.module.css","components/new-game-button/styles.module.css","components/new-game-button/index.tsx","constants/index.ts","components/dice-plate/index.tsx","utils/index.ts","hooks/useDiceGame.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","NewGameButtonComponent","onClick","title","className","classes","root","width","height","src","alt","NewGameButton","memo","displayName","diceNames","process","REACT_APP_CRYPTO_KEY","REACT_APP_CRYPTO_SECRET","diceImages","reduce","prev","name","DicePlateComponent","items","disabled","onStart","map","item","index","content","type","DicePlate","randomIntegerInRange","start","end","Math","floor","random","randomInRange","formatThousand","amount","toString","replace","getRandomNames","Array","fill","undefined","length","initiateBetState","initiateAmount","useDiceGame","useState","names","setNames","betState","setBetState","rolling","setRolling","needToShowResult","setNeedToShowResult","intervalId","setIntervalId","timeoutId","setTimeoutId","setAmount","handleBet","useCallback","bettedItems","filter","n","bettedAmount","total","includes","alert","handleResetBet","e","stopPropagation","makeCleanInterval","id","window","clearInterval","handleRoll","totalAmount","setInterval","setTimeout","startNewSession","useEffect","cleanInterval","clearTimeout","gainedAmount","i","App","data-testid","Object","entries","betted","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4fc8013.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__Bag0b\",\"item\":\"styles_item__29bPs\",\"content\":\"styles_content__1qV1g\",\"play-button\":\"styles_play-button__2w0PU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__2RVCt\"};","import { memo } from 'react';\n\nimport classes from './styles.module.css';\n\nexport const NewGameButtonComponent: React.FC<NewGameButtonProps> = ({\n  onClick,\n}) => (\n  <button title=\"New game\" className={classes.root} onClick={onClick}>\n    <img width={24} height=\"auto\" src=\"/images/sync.svg\" alt=\"new-game-icon\" />\n  </button>\n);\n\nconst NewGameButton = memo(NewGameButtonComponent);\nNewGameButton.displayName = 'NewGameButton';\n\nexport default NewGameButton;\n\nexport interface NewGameButtonProps {\n  onClick: React.EventHandler<any>;\n}\n","export const CRYPTO_KEY = process.env.REACT_APP_CRYPTO_KEY;\nexport const CRYPTO_SECRET = process.env.REACT_APP_CRYPTO_SECRET;\n\nexport const diceNames = [\n  'deer',\n  'calabash',\n  'rooster',\n  'fish',\n  'crab',\n  'shrimp',\n] as const;\n\nexport type DiceName = typeof diceNames[number];\n\nexport const diceImages = diceNames.reduce(\n  (prev, name) => ({ ...prev, [name]: `/images/${name}.svg` }),\n  {},\n) as Record<DiceName, string>;\n","import { memo } from 'react';\nimport { diceImages, DiceName } from '../../constants';\nimport classes from './styles.module.css';\n\nexport const DicePlateComponent: React.FC<DicePlateProps> = ({\n  items,\n  disabled,\n  onStart,\n}) => (\n  <div className={classes.root}>\n    {items.map((item, index) => (\n      <div key={`${item}-${index}`} className={classes.item}>\n        <div className={classes.content}>\n          <img\n            width={64}\n            height=\"auto\"\n            src={diceImages[item]}\n            alt={`rolled-${item}`}\n          />\n        </div>\n      </div>\n    ))}\n    <button\n      type=\"button\"\n      className={classes['play-button']}\n      disabled={disabled}\n      onClick={onStart}\n    >\n      <img width={64} height=\"auto\" src=\"/images/dice.svg\" alt=\"play-icon\" />\n    </button>\n  </div>\n);\n\nconst DicePlate = memo(DicePlateComponent);\nDicePlate.displayName = 'DicePlate';\n\nexport default DicePlate;\n\nexport interface DicePlateProps {\n  disabled: boolean;\n  items: DiceName[];\n  onStart: React.MouseEventHandler<any>;\n}\n","export const randomInRange = (start: number, end: number) =>\n  Math.random() * (end - start) + start;\n\nexport const randomIntegerInRange = (start: number, end: number) =>\n  Math.floor(randomInRange(start, end));\n\nexport const formatThousand = (amount: number | string) => {\n  const regex = /\\B(?=(\\d{3})+(?!\\d))/g;\n  return amount.toString().replace(regex, ',');\n};\n","import { useCallback, useEffect, useState } from 'react';\nimport { randomIntegerInRange } from '../utils';\nimport { DiceName, diceNames } from '../constants';\n\nconst getRandomNames = () => {\n  const getRandomIndex = () => randomIntegerInRange(0, diceNames.length);\n  return new Array(3)\n    .fill(undefined)\n    .map(getRandomIndex)\n    .map((index) => diceNames[index]);\n};\n\nconst initiateBetState = () =>\n  diceNames.reduce((prev, name) => ({ ...prev, [name]: 0 }), {}) as Record<\n    DiceName,\n    number\n  >;\n\nconst initiateAmount = () => randomIntegerInRange(20, 100);\n\nconst useDiceGame = () => {\n  const [names, setNames] = useState<DiceName[]>(getRandomNames);\n  const [betState, setBetState] = useState(initiateBetState);\n  const [rolling, setRolling] = useState(false);\n  const [needToShowResult, setNeedToShowResult] = useState(false);\n  const [intervalId, setIntervalId] = useState<number>();\n  const [timeoutId, setTimeoutId] = useState<number>();\n  const [amount, setAmount] = useState(initiateAmount);\n\n  const handleBet = useCallback(\n    (name: DiceName) => () => {\n      if (!rolling) {\n        const bettedItems = diceNames.filter((n) => betState[n] > 0);\n        const bettedAmount = bettedItems.reduce(\n          (total, item) => total + betState[item],\n          0,\n        );\n\n        if (needToShowResult) {\n          setBetState(initiateBetState);\n        }\n\n        if (bettedAmount < amount) {\n          // can bet only 3 items\n          if (bettedItems.length < 3 || bettedItems.includes(name)) {\n            setNeedToShowResult(false);\n            setBetState((prev) => ({ ...prev, [name]: prev[name] + 1 }));\n          } else {\n            alert('You can bet up to 3 items!');\n          }\n        } else {\n          alert('Please adjust your betted amount!');\n        }\n      }\n    },\n    [amount, betState, needToShowResult, rolling],\n  );\n\n  const handleResetBet = useCallback(\n    (name: DiceName) => (e: React.MouseEvent) => {\n      e.stopPropagation();\n      if (!rolling) {\n        setBetState((prev) => ({ ...prev, [name]: 0 }));\n      }\n    },\n    [rolling],\n  );\n\n  const makeCleanInterval = useCallback(\n    (id?: number) => () => {\n      window.clearInterval(id);\n      setRolling(false);\n      setNeedToShowResult(true);\n    },\n    [],\n  );\n\n  const handleRoll = useCallback(\n    (e: React.MouseEvent) => {\n      e.stopPropagation();\n      const bettedItems = diceNames.filter((n) => betState[n] > 0);\n      const bettedAmount = bettedItems.reduce(\n        (totalAmount, item) => totalAmount + betState[item],\n        0,\n      );\n      // Can start only having betted and valid betted amount\n      if (bettedItems.length) {\n        if (bettedAmount <= amount) {\n          const id = window.setInterval(() => {\n            setNames(getRandomNames);\n          }, 100);\n          setNeedToShowResult(false);\n          setRolling(true);\n          setIntervalId(id);\n          setTimeoutId(window.setTimeout(makeCleanInterval(id), 3000));\n        } else {\n          alert('Please adjust your betted amount!');\n        }\n      } else {\n        alert('Please bet at least one item!');\n      }\n    },\n    [amount, betState, makeCleanInterval],\n  );\n\n  const startNewSession = useCallback(() => {\n    setAmount(initiateAmount);\n    setNeedToShowResult(false);\n    setBetState(initiateBetState);\n  }, []);\n\n  useEffect(() => {\n    return () => {\n      if (intervalId && timeoutId && rolling) {\n        const cleanInterval = makeCleanInterval(intervalId);\n        cleanInterval();\n        window.clearTimeout(timeoutId);\n      }\n    };\n  }, [makeCleanInterval, intervalId, timeoutId, rolling]);\n\n  // update amount\n  useEffect(() => {\n    if (!rolling && needToShowResult) {\n      const bettedItems = diceNames.filter((n) => betState[n] > 0);\n      const gainedAmount = bettedItems.reduce((total, item) => {\n        if (names.includes(item)) {\n          const factor = names.filter((i) => i === item).length;\n          return total + factor * betState[item];\n        }\n\n        return total - betState[item];\n      }, 0);\n      setAmount((prev) => prev + gainedAmount);\n    }\n  }, [rolling, betState, names, needToShowResult]);\n\n  return {\n    names,\n    rolling,\n    needToShowResult,\n    betState,\n    amount,\n    handleRoll,\n    handleBet,\n    handleResetBet,\n    startNewSession,\n  };\n};\n\nexport default useDiceGame;\n","import NewGameButton from './components/new-game-button';\nimport DicePlate from './components/dice-plate';\nimport useDiceGame from './hooks/useDiceGame';\nimport { diceImages, DiceName } from './constants';\nimport { formatThousand } from './utils';\n\nimport './App.css';\n\nfunction App() {\n  const {\n    amount,\n    betState,\n    names,\n    needToShowResult,\n    rolling,\n    handleBet,\n    handleResetBet,\n    handleRoll,\n    startNewSession,\n  } = useDiceGame();\n\n  return (\n    <div data-testid=\"App\" className=\"App\">\n      <div className=\"side-section left-side\">Happy new year 2021</div>\n      <div className=\"side-section right-side\">Happy new year 2021</div>\n      <div className=\"amount-section\">\n        <span>${formatThousand(amount)}</span>\n        <NewGameButton onClick={startNewSession} />\n      </div>\n      <DicePlate disabled={rolling} items={names} onStart={handleRoll} />\n      <div className=\"game-grid\">\n        {(Object.entries(diceImages) as Array<[DiceName, string]>).map(\n          ([name, src]) => {\n            const betted = betState[name] > 0;\n            return (\n              <div key={name} className={'game-item'} onClick={handleBet(name)}>\n                <div\n                  className={`content ${\n                    needToShowResult && names.includes(name) ? 'matched' : ''\n                  } ${betState[name] > 0 ? 'betted' : ''}`}\n                >\n                  {betted && (\n                    <>\n                      {!needToShowResult && (\n                        <div className=\"corner-section\">\n                          <span\n                            className=\"reset\"\n                            onClick={handleResetBet(name)}\n                          >\n                            &#x2715;\n                          </span>\n                        </div>\n                      )}\n                      <div className=\"bet-value\">\n                        <span className=\"bet-value\">{betState[name]}</span>\n                      </div>\n                    </>\n                  )}\n\n                  <img width={108} height=\"auto\" src={src} alt={name} />\n                </div>\n              </div>\n            );\n          },\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}