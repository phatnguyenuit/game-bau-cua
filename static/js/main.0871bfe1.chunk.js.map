{"version":3,"sources":["components/dice-plate/styles.module.css","components/new-game-button/styles.module.css","components/language-switcher/styles.module.css","helpers/index.ts","constants/index.ts","utils/index.ts","components/dice-grid/index.tsx","components/dice-plate/index.tsx","components/new-game-button/index.tsx","containers/dice-game/index.tsx","containers/dice-game/utils.ts","components/language-switcher/index.tsx","App.tsx","reportWebVitals.ts","i18n.ts","index.tsx","components/dice-grid/styles.module.css","containers/dice-game/styles.module.css"],"names":["module","exports","getStaticPath","path","base","formattedPath","replace","DICE_NAMES","DICE_IMAGES","reduce","prev","name","process","randomIntegerInRange","start","end","Math","floor","random","randomInRange","formatThousand","amount","toString","classnames","args","classes","map","arg","Array","isArray","flat","Object","entries","key","filter","Boolean","join","getRandomDices","fill","undefined","length","index","initiateBetState","initiateAmount","DiceGridComponent","betValues","rolledDices","needToShowResult","onBet","onResetBet","isBetted","useCallback","diceName","data-testid","className","root","imageSrc","betted","item","onClick","content","matched","includes","width","height","src","alt","reset","DiceGrid","memo","displayName","DicePlateComponent","items","disabled","onStart","title","type","DicePlate","NewGameButtonComponent","NewGameButton","DiceGameComponent","t","useTranslation","useState","setRolledDices","betState","setBetState","rolling","setRolling","setNeedToShowResult","intervalId","setIntervalId","timeoutId","setTimeoutId","setAmount","handleBet","bettedItems","n","bettedAmount","total","alert","defaultValue","handleResetBet","e","stopPropagation","makeCleanInterval","id","window","clearInterval","handleRollingInterval","handleRoll","totalAmount","setInterval","setTimeout","startNewSession","useEffect","clearTimeout","gainedAmount","i","useDiceGame","DiceGame","supportedLanguages","LanguageSwitcherComponent","i18n","changeLanguage","lng","language","href","LanguageSwitcher","App","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","backend","loadPath","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0871bfe1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__Bag0b\",\"item\":\"styles_item__29bPs\",\"content\":\"styles_content__1qV1g\",\"play-button\":\"styles_play-button__2w0PU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__2RVCt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__UKEs5\"};","export const getStaticPath = (path: string, base: string) => {\n  let formattedPath = path.replace(/^\\//, '').replace(/\\/$/, '');\n  return `${base}/${formattedPath}`;\n};\n","import { getStaticPath } from '../helpers';\n\nexport const CRYPTO_KEY = process.env.REACT_APP_CRYPTO_KEY;\nexport const CRYPTO_SECRET = process.env.REACT_APP_CRYPTO_SECRET;\nexport const PUBLIC_URL = process.env.PUBLIC_URL;\n\nexport const DICE_NAMES = [\n  'deer',\n  'calabash',\n  'rooster',\n  'fish',\n  'crab',\n  'shrimp',\n] as const;\n\nexport type DiceName = typeof DICE_NAMES[number];\n\nexport const DICE_IMAGES = DICE_NAMES.reduce(\n  (prev, name) => ({\n    ...prev,\n    [name]: getStaticPath(`/images/${name}.svg`, PUBLIC_URL),\n  }),\n  {},\n) as Record<DiceName, string>;\n\nexport const MIN_AMOUNT = 20;\nexport const MAX_AMOUNT = 100;\n\nexport const ROLLING_INTERVAL_MS = 100;\nexport const ROLLING_TIMEOUT_MS = 3000;\n","import { DiceName, DICE_NAMES, MAX_AMOUNT, MIN_AMOUNT } from '../constants';\n\nexport const randomInRange = (start: number, end: number) =>\n  Math.random() * (end - start) + start;\n\nexport const randomIntegerInRange = (start: number, end: number) =>\n  Math.floor(randomInRange(start, end));\n\nexport const formatThousand = (amount: number | string) => {\n  const regex = /\\B(?=(\\d{3})+(?!\\d))/g;\n  return amount.toString().replace(regex, ',');\n};\n\nexport const classnames = (...args: any[]) => {\n  const classes = args.map((arg) => {\n    if (typeof arg === 'string') return arg;\n    if (Array.isArray(arg)) return arg.flat();\n    if (typeof arg === 'object') {\n      return Object.entries(arg).map(([key, value]) => {\n        if (value) return key;\n        return '';\n      });\n    }\n    return '';\n  });\n  return classes.flat().filter(Boolean).join(' ');\n};\n\nexport const getRandomDices = () => {\n  const getRandomIndex = () => randomIntegerInRange(0, DICE_NAMES.length);\n  return new Array(3)\n    .fill(undefined)\n    .map(getRandomIndex)\n    .map((index) => DICE_NAMES[index]);\n};\n\nexport const initiateBetState = () =>\n  DICE_NAMES.reduce((prev, name) => ({ ...prev, [name]: 0 }), {}) as Record<\n    DiceName,\n    number\n  >;\n\nexport const initiateAmount = () =>\n  randomIntegerInRange(MIN_AMOUNT, MAX_AMOUNT);\n","import { memo, useCallback } from 'react';\nimport { classnames } from '../../utils';\nimport { DICE_IMAGES, DiceName } from '../../constants';\nimport classes from './styles.module.css';\n\nexport const DiceGridComponent: React.FC<DiceGridProps> = ({\n  betValues,\n  rolledDices,\n  needToShowResult,\n  onBet,\n  onResetBet,\n}) => {\n  const isBetted = useCallback(\n    (diceName: DiceName) => {\n      return betValues[diceName] > 0;\n    },\n    [betValues],\n  );\n\n  return (\n    <div data-testid=\"dice-grid\" className={classes.root}>\n      {(Object.entries(DICE_IMAGES) as Array<[DiceName, string]>).map(\n        ([diceName, imageSrc]) => {\n          const betted = isBetted(diceName);\n          return (\n            <div\n              key={diceName}\n              data-testid={diceName}\n              className={classes.item}\n              onClick={onBet(diceName)}\n            >\n              <div\n                data-testid={`${diceName}-content`}\n                className={classnames(classes.content, {\n                  [classes.matched]:\n                    needToShowResult && rolledDices.includes(diceName),\n                  [classes.betted]: betted,\n                })}\n              >\n                <img width={108} height=\"auto\" src={imageSrc} alt={diceName} />\n                {betted && (\n                  <>\n                    {!needToShowResult && (\n                      <div className={classes['corner-section']}>\n                        <span\n                          data-testid={`${diceName}-reset`}\n                          className={classes.reset}\n                          onClick={onResetBet(diceName)}\n                        >\n                          &#x2715;\n                        </span>\n                      </div>\n                    )}\n                    <div\n                      data-testid={`${diceName}-bet-value`}\n                      className={classes['bet-value']}\n                    >\n                      <span>{betValues[diceName]}</span>\n                    </div>\n                  </>\n                )}\n              </div>\n            </div>\n          );\n        },\n      )}\n    </div>\n  );\n};\n\nconst DiceGrid = memo(DiceGridComponent);\nDiceGrid.displayName = 'DiceGrid';\n\nexport default DiceGrid;\n\nexport interface DiceGridProps {\n  betValues: Record<DiceName, number>;\n  needToShowResult: boolean;\n  rolledDices: DiceName[];\n  onBet: (name: DiceName) => React.MouseEventHandler<any>;\n  onResetBet: (name: DiceName) => React.MouseEventHandler<any>;\n}\n","import { memo } from 'react';\nimport { getStaticPath } from '../../helpers';\nimport { DICE_IMAGES, DiceName, PUBLIC_URL } from '../../constants';\nimport classes from './styles.module.css';\n\nexport const DicePlateComponent: React.FC<DicePlateProps> = ({\n  items,\n  disabled,\n  onStart,\n}) => (\n  <div data-testid=\"dice-plate\" className={classes.root}>\n    {items.map((item, index) => (\n      <div data-testid=\"item\" key={`${item}-${index}`} className={classes.item}>\n        <div className={classes.content}>\n          <img\n            width={64}\n            height=\"auto\"\n            src={DICE_IMAGES[item]}\n            alt={`rolled-${item}`}\n          />\n        </div>\n      </div>\n    ))}\n    <button\n      data-testid=\"play-button\"\n      title=\"Play\"\n      type=\"button\"\n      className={classes['play-button']}\n      disabled={disabled}\n      onClick={onStart}\n    >\n      <img\n        width={64}\n        height=\"auto\"\n        src={getStaticPath('/images/dice.svg', PUBLIC_URL)}\n        alt=\"play-icon\"\n      />\n    </button>\n  </div>\n);\n\nconst DicePlate = memo(DicePlateComponent);\nDicePlate.displayName = 'DicePlate';\n\nexport default DicePlate;\n\nexport interface DicePlateProps {\n  disabled: boolean;\n  items: DiceName[];\n  onStart: React.MouseEventHandler<any>;\n}\n","import { memo } from 'react';\nimport { getStaticPath } from '../../helpers';\nimport { PUBLIC_URL } from '../../constants';\n\nimport classes from './styles.module.css';\n\nexport const NewGameButtonComponent: React.FC<NewGameButtonProps> = ({\n  onClick,\n}) => (\n  <button\n    data-testid=\"new-game-button\"\n    title=\"New game\"\n    className={classes.root}\n    onClick={onClick}\n  >\n    <img\n      width={32}\n      height=\"auto\"\n      src={getStaticPath('/images/sync.svg', PUBLIC_URL)}\n      alt=\"new-game-icon\"\n    />\n  </button>\n);\n\nconst NewGameButton = memo(NewGameButtonComponent);\nNewGameButton.displayName = 'NewGameButton';\n\nexport default NewGameButton;\n\nexport interface NewGameButtonProps {\n  onClick: React.EventHandler<any>;\n}\n","import { memo } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport DiceGrid from 'components/dice-grid';\nimport DicePlate from 'components/dice-plate';\nimport NewGameButton from 'components/new-game-button';\n\nimport { formatThousand, classnames } from '../../utils';\nimport { useDiceGame } from './utils';\n\nimport classes from './styles.module.css';\n\nexport const DiceGameComponent: React.FC = () => {\n  const { t } = useTranslation();\n  const {\n    amount,\n    betState,\n    rolledDices,\n    needToShowResult,\n    rolling,\n    handleBet,\n    handleResetBet,\n    handleRoll,\n    startNewSession,\n  } = useDiceGame();\n  return (\n    <div data-testid=\"dice-game\">\n      <div\n        className={classnames(classes['side-section'], classes['left-side'])}\n      >\n        <span>\n          {t('happy-banner', { defaultValue: 'Happy new year 2021' })}\n        </span>\n      </div>\n\n      <div className={classes['amount-section']}>\n        <span>${formatThousand(amount)}</span>\n        <NewGameButton onClick={startNewSession} />\n      </div>\n      <DicePlate disabled={rolling} items={rolledDices} onStart={handleRoll} />\n      <DiceGrid\n        betValues={betState}\n        rolledDices={rolledDices}\n        needToShowResult={needToShowResult}\n        onBet={handleBet}\n        onResetBet={handleResetBet}\n      />\n      <div\n        className={classnames(classes['side-section'], classes['right-side'])}\n      >\n        <span>\n          {t('happy-banner', { defaultValue: 'Happy new year 2021' })}\n        </span>\n      </div>\n    </div>\n  );\n};\n\nconst DiceGame = memo(DiceGameComponent);\nDiceGame.displayName = 'DiceGame';\n\nexport default DiceGame;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { getRandomDices, initiateBetState, initiateAmount } from '../../utils';\nimport { DiceName, DICE_NAMES, ROLLING_INTERVAL_MS } from '../../constants';\n\nexport const useDiceGame = () => {\n  const [rolledDices, setRolledDices] = useState<DiceName[]>(getRandomDices);\n  const [betState, setBetState] = useState(initiateBetState);\n  const [rolling, setRolling] = useState(false);\n  const [needToShowResult, setNeedToShowResult] = useState(false);\n  const [intervalId, setIntervalId] = useState<number>();\n  const [timeoutId, setTimeoutId] = useState<number>();\n  const [amount, setAmount] = useState(initiateAmount);\n  const { t } = useTranslation();\n\n  const handleBet = useCallback(\n    (name: DiceName) => () => {\n      if (!rolling) {\n        const bettedItems = DICE_NAMES.filter((n) => betState[n] > 0);\n        const bettedAmount = bettedItems.reduce(\n          (total, item) => total + betState[item],\n          0,\n        );\n\n        if (needToShowResult) {\n          setBetState(initiateBetState);\n        }\n\n        if (bettedAmount < amount) {\n          // can bet only 3 items\n          if (bettedItems.length < 3 || bettedItems.includes(name)) {\n            setNeedToShowResult(false);\n            setBetState((prev) => ({ ...prev, [name]: prev[name] + 1 }));\n          } else {\n            alert(\n              t('max-bet-msg', { defaultValue: 'You can bet up to 3 items!' }),\n            );\n          }\n        } else {\n          alert(\n            t('exceed-bet-amount-msg', {\n              defaultValue: 'Please adjust your betted amount!',\n            }),\n          );\n        }\n      }\n    },\n    [amount, betState, needToShowResult, rolling, t],\n  );\n\n  const handleResetBet = useCallback(\n    (name: DiceName) => (e: React.MouseEvent) => {\n      e.stopPropagation();\n      if (!rolling) {\n        setBetState(initiateBetState);\n      }\n    },\n    [rolling],\n  );\n\n  const makeCleanInterval = useCallback(\n    (id?: number) => () => {\n      window.clearInterval(id);\n      setRolling(false);\n      setNeedToShowResult(true);\n    },\n    [],\n  );\n\n  const handleRollingInterval = useCallback(() => {\n    setRolledDices(getRandomDices);\n  }, []);\n\n  const handleRoll = useCallback(\n    (e: React.MouseEvent) => {\n      e.stopPropagation();\n      const bettedItems = DICE_NAMES.filter((n) => betState[n] > 0);\n      const bettedAmount = bettedItems.reduce(\n        (totalAmount, item) => totalAmount + betState[item],\n        0,\n      );\n      // Can start only having betted and valid betted amount\n      if (bettedItems.length) {\n        if (bettedAmount <= amount) {\n          const id = window.setInterval(\n            handleRollingInterval,\n            ROLLING_INTERVAL_MS,\n          );\n          setNeedToShowResult(false);\n          setRolling(true);\n          setIntervalId(id);\n          setTimeoutId(\n            window.setTimeout(makeCleanInterval(id), ROLLING_INTERVAL_MS),\n          );\n        } else {\n          alert(\n            t('exceed-bet-amount-msg', {\n              defaultValue: 'Please adjust your betted amount!',\n            }),\n          );\n        }\n      } else {\n        alert(\n          t('no-bet-msg', { defaultValue: 'Please bet at least one item!' }),\n        );\n      }\n    },\n    [betState, amount, handleRollingInterval, makeCleanInterval, t],\n  );\n\n  const startNewSession = useCallback(() => {\n    setAmount(initiateAmount);\n    setNeedToShowResult(false);\n    setBetState(initiateBetState);\n  }, []);\n\n  // clean up effect\n  useEffect(() => {\n    return () => {\n      if (intervalId && timeoutId && rolling) {\n        makeCleanInterval(intervalId)();\n        window.clearTimeout(timeoutId);\n      }\n    };\n  }, [makeCleanInterval, intervalId, timeoutId, rolling]);\n\n  // update amount effect\n  useEffect(() => {\n    if (!rolling && needToShowResult) {\n      const bettedItems = DICE_NAMES.filter((n) => betState[n] > 0);\n      const gainedAmount = bettedItems.reduce((total, item) => {\n        if (rolledDices && rolledDices.includes(item)) {\n          const factor = rolledDices.filter((i) => i === item).length;\n          return total + factor * betState[item];\n        }\n\n        return total - betState[item];\n      }, 0);\n      setAmount((prev) => prev + gainedAmount);\n    }\n  }, [rolling, betState, rolledDices, needToShowResult]);\n\n  return {\n    rolledDices,\n    rolling,\n    needToShowResult,\n    betState,\n    amount,\n    intervalId,\n    timeoutId,\n    handleBet,\n    handleResetBet,\n    handleRoll,\n    handleRollingInterval,\n    makeCleanInterval,\n    startNewSession,\n    setRolledDices,\n    setRolling,\n    setIntervalId,\n    setTimeoutId,\n    setBetState,\n    setNeedToShowResult,\n  };\n};\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport { memo, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport classes from './styles.module.css';\n\nexport const supportedLanguages = ['en', 'vi'];\n\nexport const LanguageSwitcherComponent: React.FC = () => {\n  const { i18n } = useTranslation();\n\n  const changeLanguage = useCallback(\n    (lng: string) => () => {\n      i18n.changeLanguage(lng);\n    },\n    [i18n],\n  );\n  return (\n    <div data-testid=\"language-switcher\" className={classes.root}>\n      {supportedLanguages.map((language) => (\n        <a\n          data-testid={`${language}-link`}\n          key={language}\n          href=\"#\"\n          onClick={changeLanguage(language)}\n        >\n          {language}\n        </a>\n      ))}\n    </div>\n  );\n};\n\nconst LanguageSwitcher = memo(LanguageSwitcherComponent);\nLanguageSwitcher.displayName = 'LanguageSwitcher';\n\nexport default LanguageSwitcher;\n","import DiceGame from 'containers/dice-game';\nimport LanguageSwitcher from 'components/language-switcher';\nimport { Suspense } from 'react';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Suspense fallback=\"Loading translation...\">\n      <div data-testid=\"App\" className=\"App\">\n        <LanguageSwitcher />\n        <DiceGame />\n      </div>\n    </Suspense>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n// don't want to use this?\n// have a look at the Quick start guide\n// for passing in lng and translations on init\n\ni18n\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n  // learn more: https://github.com/i18next/i18next-http-backend\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    fallbackLng: 'en',\n    debug: process.env.NODE_ENV === 'development',\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n    backend: {\n      loadPath: '/locales/{{lng}}/{{ns}}.json',\n    },\n  });\n\nexport default i18n;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './i18n';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__kr_2d\",\"item\":\"styles_item__1j-O8\",\"content\":\"styles_content__3Lgnn\",\"matched\":\"styles_matched__1ICbi\",\"pulse\":\"styles_pulse__Hi-_I\",\"corner-section\":\"styles_corner-section__orbAR\",\"reset\":\"styles_reset__A3Ld4\",\"bet-value\":\"styles_bet-value__2pSyQ\",\"betted\":\"styles_betted__3Bm6Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"side-section\":\"styles_side-section__w8DAV\",\"left-side\":\"styles_left-side___8tTK\",\"right-side\":\"styles_right-side__2j5ey\",\"amount-section\":\"styles_amount-section__1zrEI\"};"],"sourceRoot":""}