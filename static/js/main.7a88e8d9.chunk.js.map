{"version":3,"sources":["components/new-game-button/styles.module.css","components/language-switcher/styles.module.css","components/dice-grid/styles.module.css","utils/index.ts","components/dice-grid/index.tsx","components/dice-plate/index.tsx","components/new-game-button/index.tsx","services/storage.ts","containers/dice-game/utils.ts","containers/dice-game/index.tsx","components/language-switcher/index.tsx","App.tsx","reportWebVitals.ts","i18n.ts","index.tsx","helpers/index.ts","containers/dice-game/styles.module.css","components/dice-plate/styles.module.css","services/crypto.ts","constants/index.ts"],"names":["module","exports","randomIntegerInRange","start","end","Math","floor","random","randomInRange","formatThousand","amount","toString","replace","classnames","args","classes","map","arg","Array","isArray","flat","Object","entries","key","filter","Boolean","join","getRandomDices","fill","undefined","DICE_NAMES","length","index","initiateBetState","reduce","prev","name","initiateAmount","MIN_AMOUNT","MAX_AMOUNT","DiceGridComponent","betValues","rolledDices","needToShowResult","onBet","onResetBet","isBetted","useCallback","diceName","className","root","DICE_IMAGES","imageSrc","betted","item","onClick","content","matched","includes","width","height","src","alt","reset","DiceGrid","memo","displayName","DicePlateComponent","items","disabled","onStart","title","type","getStaticPath","PUBLIC_URL","DicePlate","NewGameButtonComponent","NewGameButton","setItem","value","encryptedKey","Crypto","encrypt","encryptedValue","window","localStorage","getItem","decrypt","getLastAmount","lastAmount","storage","Number","DiceGameComponent","t","useTranslation","useState","setRolledDices","betState","setBetState","rolling","setRolling","setNeedToShowResult","intervalId","setIntervalId","timeoutId","setTimeoutId","setAmount","handleBet","bettedItems","n","bettedAmount","total","alert","defaultValue","handleResetBet","e","stopPropagation","prevState","makeCleanInterval","id","clearInterval","handleRollingInterval","handleRoll","totalAmount","setInterval","ROLLING_INTERVAL_MS","setTimeout","ROLLING_TIMEOUT_MS","startNewSession","useEffect","clearTimeout","gainedAmount","i","String","useDiceGame","DiceGame","supportedLanguages","LanguageSwitcherComponent","i18n","changeLanguage","lng","language","href","LanguageSwitcher","App","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","process","interpolation","escapeValue","backend","loadPath","ReactDOM","render","StrictMode","document","getElementById","path","base","formattedPath","text","keySecret","CRYPTO_KEY","CRYPTO_SECRET","cc","crypto","createDecipher","Buffer","from","concat","update","final","createCipher"],"mappings":"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","file":"static/js/main.7a88e8d9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__2RVCt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__UKEs5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__kr_2d\",\"item\":\"styles_item__1j-O8\",\"content\":\"styles_content__3Lgnn\",\"matched\":\"styles_matched__1ICbi\",\"pulse\":\"styles_pulse__Hi-_I\",\"corner-section\":\"styles_corner-section__orbAR\",\"reset\":\"styles_reset__A3Ld4\",\"bet-value\":\"styles_bet-value__2pSyQ\",\"betted\":\"styles_betted__3Bm6Q\"};","import { DiceName, DICE_NAMES, MAX_AMOUNT, MIN_AMOUNT } from '../constants';\n\nexport const randomInRange = (start: number, end: number) =>\n  Math.random() * (end - start) + start;\n\nexport const randomIntegerInRange = (start: number, end: number) =>\n  Math.floor(randomInRange(start, end));\n\nexport const formatThousand = (amount: number | string) => {\n  const regex = /\\B(?=(\\d{3})+(?!\\d))/g;\n  return amount.toString().replace(regex, ',');\n};\n\nexport const classnames = (...args: any[]) => {\n  const classes = args.map((arg) => {\n    if (typeof arg === 'string') return arg;\n    if (Array.isArray(arg)) return arg.flat();\n    if (typeof arg === 'object') {\n      return Object.entries(arg).map(([key, value]) => {\n        if (value) return key;\n        return '';\n      });\n    }\n    return '';\n  });\n  return classes.flat().filter(Boolean).join(' ');\n};\n\nexport const getRandomDices = () => {\n  const getRandomIndex = () => randomIntegerInRange(0, DICE_NAMES.length);\n  return new Array(3)\n    .fill(undefined)\n    .map(getRandomIndex)\n    .map((index) => DICE_NAMES[index]);\n};\n\nexport const initiateBetState = () =>\n  DICE_NAMES.reduce((prev, name) => ({ ...prev, [name]: 0 }), {}) as Record<\n    DiceName,\n    number\n  >;\n\nexport const initiateAmount = () =>\n  randomIntegerInRange(MIN_AMOUNT, MAX_AMOUNT);\n","import { memo, useCallback } from 'react';\nimport { classnames } from '../../utils';\nimport { DICE_IMAGES, DiceName } from '../../constants';\nimport classes from './styles.module.css';\n\nexport const DiceGridComponent: React.FC<DiceGridProps> = ({\n  betValues,\n  rolledDices,\n  needToShowResult,\n  onBet,\n  onResetBet,\n}) => {\n  const isBetted = useCallback(\n    (diceName: DiceName) => {\n      return betValues[diceName] > 0;\n    },\n    [betValues],\n  );\n\n  return (\n    <div data-testid=\"dice-grid\" className={classes.root}>\n      {(Object.entries(DICE_IMAGES) as Array<[DiceName, string]>).map(\n        ([diceName, imageSrc]) => {\n          const betted = isBetted(diceName);\n          return (\n            <div\n              key={diceName}\n              data-testid={diceName}\n              className={classes.item}\n              onClick={onBet(diceName)}\n            >\n              <div\n                data-testid={`${diceName}-content`}\n                className={classnames(classes.content, {\n                  [classes.matched]:\n                    needToShowResult && rolledDices.includes(diceName),\n                  [classes.betted]: betted,\n                })}\n              >\n                <img width={108} height=\"auto\" src={imageSrc} alt={diceName} />\n                {betted && (\n                  <>\n                    {!needToShowResult && (\n                      <div className={classes['corner-section']}>\n                        <span\n                          data-testid={`${diceName}-reset`}\n                          className={classes.reset}\n                          onClick={onResetBet(diceName)}\n                        >\n                          &#x2715;\n                        </span>\n                      </div>\n                    )}\n                    <div\n                      data-testid={`${diceName}-bet-value`}\n                      className={classes['bet-value']}\n                    >\n                      <span>{betValues[diceName]}</span>\n                    </div>\n                  </>\n                )}\n              </div>\n            </div>\n          );\n        },\n      )}\n    </div>\n  );\n};\n\nconst DiceGrid = memo(DiceGridComponent);\nDiceGrid.displayName = 'DiceGrid';\n\nexport default DiceGrid;\n\nexport interface DiceGridProps {\n  betValues: Record<DiceName, number>;\n  needToShowResult: boolean;\n  rolledDices: DiceName[];\n  onBet: (name: DiceName) => React.MouseEventHandler<any>;\n  onResetBet: (name: DiceName) => React.MouseEventHandler<any>;\n}\n","import { memo } from 'react';\nimport { getStaticPath } from '../../helpers';\nimport { DICE_IMAGES, DiceName, PUBLIC_URL } from '../../constants';\nimport classes from './styles.module.css';\n\nexport const DicePlateComponent: React.FC<DicePlateProps> = ({\n  items,\n  disabled,\n  onStart,\n}) => (\n  <div data-testid=\"dice-plate\" className={classes.root}>\n    {items.map((item, index) => (\n      <div data-testid=\"item\" key={`${item}-${index}`} className={classes.item}>\n        <div className={classes.content}>\n          <img\n            width={64}\n            height=\"auto\"\n            src={DICE_IMAGES[item]}\n            alt={`rolled-${item}`}\n          />\n        </div>\n      </div>\n    ))}\n    <button\n      data-testid=\"play-button\"\n      title=\"Play\"\n      type=\"button\"\n      className={classes['play-button']}\n      disabled={disabled}\n      onClick={onStart}\n    >\n      <img\n        width={64}\n        height=\"auto\"\n        src={getStaticPath('/images/dice.svg', PUBLIC_URL)}\n        alt=\"play-icon\"\n      />\n    </button>\n  </div>\n);\n\nconst DicePlate = memo(DicePlateComponent);\nDicePlate.displayName = 'DicePlate';\n\nexport default DicePlate;\n\nexport interface DicePlateProps {\n  disabled: boolean;\n  items: DiceName[];\n  onStart: React.MouseEventHandler<any>;\n}\n","import { memo } from 'react';\nimport { getStaticPath } from '../../helpers';\nimport { PUBLIC_URL } from '../../constants';\n\nimport classes from './styles.module.css';\n\nexport const NewGameButtonComponent: React.FC<NewGameButtonProps> = ({\n  onClick,\n}) => (\n  <button\n    data-testid=\"new-game-button\"\n    title=\"New game\"\n    className={classes.root}\n    onClick={onClick}\n  >\n    <img\n      width={32}\n      height=\"auto\"\n      src={getStaticPath('/images/sync.svg', PUBLIC_URL)}\n      alt=\"new-game-icon\"\n    />\n  </button>\n);\n\nconst NewGameButton = memo(NewGameButtonComponent);\nNewGameButton.displayName = 'NewGameButton';\n\nexport default NewGameButton;\n\nexport interface NewGameButtonProps {\n  onClick: React.EventHandler<any>;\n}\n","import Crypto from './crypto';\n\nclass Storage {\n  setItem = (key: string, value: any) => {\n    const encryptedKey = Crypto.encrypt(key);\n    const encryptedValue = Crypto.encrypt(value);\n    window.localStorage.setItem(encryptedKey, encryptedValue);\n  };\n\n  getItem = (key: string) => {\n    const encryptedKey = Crypto.encrypt(key);\n    const encryptedValue = window.localStorage.getItem(encryptedKey) || '';\n    if (!encryptedValue) {\n      return encryptedValue;\n    }\n    return Crypto.decrypt(encryptedValue);\n  };\n}\n\nexport default new Storage();\n","import { ROLLING_TIMEOUT_MS } from './../../constants/index';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { getRandomDices, initiateBetState, initiateAmount } from '../../utils';\nimport { DiceName, DICE_NAMES, ROLLING_INTERVAL_MS } from '../../constants';\nimport storage from 'services/storage';\n\nconst getLastAmount = () => {\n  const lastAmount = storage.getItem('amount');\n  return lastAmount ? Number(lastAmount) : initiateAmount();\n};\n\nexport const useDiceGame = () => {\n  const [rolledDices, setRolledDices] = useState<DiceName[]>(getRandomDices);\n  const [betState, setBetState] = useState(initiateBetState);\n  const [rolling, setRolling] = useState(false);\n  const [needToShowResult, setNeedToShowResult] = useState(false);\n  const [intervalId, setIntervalId] = useState<number>();\n  const [timeoutId, setTimeoutId] = useState<number>();\n  const [amount, setAmount] = useState(getLastAmount);\n  const { t } = useTranslation();\n\n  const handleBet = useCallback(\n    (name: DiceName) => () => {\n      if (!rolling) {\n        const bettedItems = DICE_NAMES.filter((n) => betState[n] > 0);\n        const bettedAmount = bettedItems.reduce(\n          (total, item) => total + betState[item],\n          0,\n        );\n\n        if (needToShowResult) {\n          setBetState(initiateBetState);\n        }\n\n        if (bettedAmount < amount) {\n          // can bet only 3 items\n          if (bettedItems.length < 3 || bettedItems.includes(name)) {\n            setNeedToShowResult(false);\n            setBetState((prev) => ({ ...prev, [name]: prev[name] + 1 }));\n          } else {\n            alert(\n              t('max-bet-msg', { defaultValue: 'You can bet up to 3 items!' }),\n            );\n          }\n        } else {\n          alert(\n            t('exceed-bet-amount-msg', {\n              defaultValue: 'Please adjust your betted amount!',\n            }),\n          );\n        }\n      }\n    },\n    [amount, betState, needToShowResult, rolling, t],\n  );\n\n  const handleResetBet = useCallback(\n    (name: DiceName) => (e: React.MouseEvent) => {\n      e.stopPropagation();\n\n      if (rolling) return;\n\n      setBetState((prevState) => ({\n        ...prevState,\n        [name]: 0,\n      }));\n    },\n    [rolling],\n  );\n\n  const makeCleanInterval = useCallback(\n    (id?: number) => () => {\n      window.clearInterval(id);\n      setRolling(false);\n      setNeedToShowResult(true);\n    },\n    [],\n  );\n\n  const handleRollingInterval = useCallback(() => {\n    setRolledDices(getRandomDices);\n  }, []);\n\n  const handleRoll = useCallback(\n    (e: React.MouseEvent) => {\n      e.stopPropagation();\n      const bettedItems = DICE_NAMES.filter((n) => betState[n] > 0);\n      const bettedAmount = bettedItems.reduce(\n        (totalAmount, item) => totalAmount + betState[item],\n        0,\n      );\n      // Can start only having betted and valid betted amount\n      if (bettedItems.length) {\n        if (bettedAmount <= amount) {\n          const id = window.setInterval(\n            handleRollingInterval,\n            ROLLING_INTERVAL_MS,\n          );\n          setNeedToShowResult(false);\n          setRolling(true);\n          setIntervalId(id);\n          setTimeoutId(\n            window.setTimeout(makeCleanInterval(id), ROLLING_TIMEOUT_MS),\n          );\n        } else {\n          alert(\n            t('exceed-bet-amount-msg', {\n              defaultValue: 'Please adjust your betted amount!',\n            }),\n          );\n        }\n      } else {\n        alert(\n          t('no-bet-msg', { defaultValue: 'Please bet at least one item!' }),\n        );\n      }\n    },\n    [betState, amount, handleRollingInterval, makeCleanInterval, t],\n  );\n\n  const startNewSession = useCallback(() => {\n    setAmount(initiateAmount);\n    setNeedToShowResult(false);\n    setBetState(initiateBetState);\n  }, []);\n\n  // clean up effect\n  useEffect(() => {\n    return () => {\n      if (intervalId && timeoutId && rolling) {\n        makeCleanInterval(intervalId)();\n        window.clearTimeout(timeoutId);\n      }\n    };\n  }, [makeCleanInterval, intervalId, timeoutId, rolling]);\n\n  // update amount effect\n  useEffect(() => {\n    if (!rolling && needToShowResult) {\n      const bettedItems = DICE_NAMES.filter((n) => betState[n] > 0);\n      const gainedAmount = bettedItems.reduce((total, item) => {\n        if (rolledDices && rolledDices.includes(item)) {\n          const factor = rolledDices.filter((i) => i === item).length;\n          return total + factor * betState[item];\n        }\n\n        return total - betState[item];\n      }, 0);\n      setAmount((prev) => prev + gainedAmount);\n    }\n  }, [rolling, betState, rolledDices, needToShowResult]);\n\n  // store last amount\n  useEffect(() => {\n    // Store the last amount\n    storage.setItem('amount', String(amount));\n  }, [amount]);\n\n  return {\n    rolledDices,\n    rolling,\n    needToShowResult,\n    betState,\n    amount,\n    intervalId,\n    timeoutId,\n    handleBet,\n    handleResetBet,\n    handleRoll,\n    handleRollingInterval,\n    makeCleanInterval,\n    startNewSession,\n    setRolledDices,\n    setRolling,\n    setIntervalId,\n    setTimeoutId,\n    setBetState,\n    setNeedToShowResult,\n  };\n};\n","import { memo } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport DiceGrid from 'components/dice-grid';\nimport DicePlate from 'components/dice-plate';\nimport NewGameButton from 'components/new-game-button';\n\nimport { formatThousand, classnames } from '../../utils';\nimport { useDiceGame } from './utils';\n\nimport classes from './styles.module.css';\n\nexport const DiceGameComponent: React.FC = () => {\n  const { t } = useTranslation();\n  const {\n    amount,\n    betState,\n    rolledDices,\n    needToShowResult,\n    rolling,\n    handleBet,\n    handleResetBet,\n    handleRoll,\n    startNewSession,\n  } = useDiceGame();\n  return (\n    <div data-testid=\"dice-game\">\n      <div\n        className={classnames(classes['side-section'], classes['left-side'])}\n      >\n        <span>\n          {t('happy-banner', { defaultValue: 'Happy new year 2021' })}\n        </span>\n      </div>\n\n      <div className={classes['amount-section']}>\n        <span>${formatThousand(amount)}</span>\n        <NewGameButton onClick={startNewSession} />\n      </div>\n      <DicePlate disabled={rolling} items={rolledDices} onStart={handleRoll} />\n      <DiceGrid\n        betValues={betState}\n        rolledDices={rolledDices}\n        needToShowResult={needToShowResult}\n        onBet={handleBet}\n        onResetBet={handleResetBet}\n      />\n      <div\n        className={classnames(classes['side-section'], classes['right-side'])}\n      >\n        <span>\n          {t('happy-banner', { defaultValue: 'Happy new year 2021' })}\n        </span>\n      </div>\n    </div>\n  );\n};\n\nconst DiceGame = memo(DiceGameComponent);\nDiceGame.displayName = 'DiceGame';\n\nexport default DiceGame;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport { memo, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport classes from './styles.module.css';\n\nexport const supportedLanguages = ['en', 'vi'];\n\nexport const LanguageSwitcherComponent: React.FC = () => {\n  const { i18n } = useTranslation();\n\n  const changeLanguage = useCallback(\n    (lng: string) => () => {\n      i18n.changeLanguage(lng);\n    },\n    [i18n],\n  );\n  return (\n    <div data-testid=\"language-switcher\" className={classes.root}>\n      {supportedLanguages.map((language) => (\n        <a\n          data-testid={`${language}-link`}\n          key={language}\n          href=\"#\"\n          onClick={changeLanguage(language)}\n        >\n          {language}\n        </a>\n      ))}\n    </div>\n  );\n};\n\nconst LanguageSwitcher = memo(LanguageSwitcherComponent);\nLanguageSwitcher.displayName = 'LanguageSwitcher';\n\nexport default LanguageSwitcher;\n","import DiceGame from 'containers/dice-game';\nimport LanguageSwitcher from 'components/language-switcher';\nimport { Suspense } from 'react';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Suspense fallback=\"Loading translation...\">\n      <div data-testid=\"App\" className=\"App\">\n        <LanguageSwitcher />\n        <DiceGame />\n      </div>\n    </Suspense>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n// don't want to use this?\n// have a look at the Quick start guide\n// for passing in lng and translations on init\n\ni18n\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n  // learn more: https://github.com/i18next/i18next-http-backend\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    fallbackLng: 'en',\n    debug: process.env.NODE_ENV === 'development',\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n    backend: {\n      loadPath: '/locales/{{lng}}/{{ns}}.json',\n    },\n  });\n\nexport default i18n;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './i18n';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const getStaticPath = (path: string, base: string) => {\n  let formattedPath = path.replace(/^\\//, '').replace(/\\/$/, '');\n  return `${base}/${formattedPath}`;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"side-section\":\"styles_side-section__w8DAV\",\"left-side\":\"styles_left-side___8tTK\",\"right-side\":\"styles_right-side__2j5ey\",\"amount-section\":\"styles_amount-section__1zrEI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__Bag0b\",\"item\":\"styles_item__29bPs\",\"content\":\"styles_content__1qV1g\",\"play-button\":\"styles_play-button__2w0PU\"};","/* eslint-disable no-buffer-constructor */\n/* eslint-disable class-methods-use-this */\nimport crypto from 'crypto';\nimport { CRYPTO_KEY, CRYPTO_SECRET } from '../constants';\n\nclass Crypto {\n  decrypt(text: string) {\n    const keySecret = `${CRYPTO_KEY}:${CRYPTO_SECRET}`;\n    const cc = crypto.createDecipher(\n      'aes-128-ecb',\n      Buffer.from(keySecret, 'base64'),\n    );\n    const decrypted = Buffer.concat([\n      cc.update(text, 'base64'),\n      cc.final(),\n    ]).toString('utf8');\n\n    return decrypted;\n  }\n\n  encrypt(text: string) {\n    const keySecret = `${CRYPTO_KEY}:${CRYPTO_SECRET}`;\n    const cc = crypto.createCipher(\n      'aes-128-ecb',\n      Buffer.from(keySecret, 'base64'),\n    );\n    const encrypted = Buffer.concat([\n      cc.update(text, 'utf8'),\n      cc.final(),\n    ]).toString('base64');\n\n    return encrypted;\n  }\n}\n\nexport default new Crypto();\n","import { getStaticPath } from '../helpers';\n\nexport const CRYPTO_KEY = process.env.REACT_APP_CRYPTO_KEY;\nexport const CRYPTO_SECRET = process.env.REACT_APP_CRYPTO_SECRET;\nexport const PUBLIC_URL = process.env.PUBLIC_URL;\n\nexport const DICE_NAMES = [\n  'deer',\n  'calabash',\n  'rooster',\n  'fish',\n  'crab',\n  'shrimp',\n] as const;\n\nexport type DiceName = typeof DICE_NAMES[number];\n\nexport const DICE_IMAGES = DICE_NAMES.reduce(\n  (prev, name) => ({\n    ...prev,\n    [name]: getStaticPath(`/images/${name}.svg`, PUBLIC_URL),\n  }),\n  {},\n) as Record<DiceName, string>;\n\nexport const MIN_AMOUNT = 20;\nexport const MAX_AMOUNT = 100;\n\nexport const ROLLING_INTERVAL_MS = 100;\nexport const ROLLING_TIMEOUT_MS = 3000;\n"],"sourceRoot":""}